
학생 정보 관리 시스템 보고서

202410288 유지헌

※※실행은 꼭 main.exe로 해주세요!!!※※
※※실행은 꼭 main.exe로 해주세요!!!※※

## 1. 개요
본 프로젝트는 학생 정보를 관리하는 프로그램입니다. 사용자는 학생 정보를 추가, 검색, 내보내기, 수정, 삭제할 수 있으며, 모든 정보는 파일에 저장됩니다. 이를 통해 학번을 기준으로 정렬된 학생 정보 데이터를 관리할 수 있습니다.

## 2. 사용한 라이브러리

- : `stdio.h`, `stdlib.h`, `string.h`

## 3. 파일 구조

- **FILENAME**: 학생 정보가 저장될 메인 파일(`학생정보파일.txt`).
- **TEMP_FILENAME**: 임시 파일(`임시파일.txt`)로, 삭제 및 수정 시 사용.

## 4. 주요 기능 설명

### 4.1. 학생 정보 추가 (`add_student` 함수)
사용자가 입력한 새로운 학생 정보를 추가하고, 학번을 기준으로 오름차순 정렬하여 파일에 저장합니다.

- **사용 방법**: 메뉴에서 **1**을 선택 후 학번, 이름, 학과, 이메일, 전화번호 입력.
- **정렬 방식**: 학번 기준으로 오름차순 정렬 (버블정렬 Bubble Sort).

### 4.2. 학생 정보 검색 (`search_student` 함수)
학번 또는 학과로 특정 학생 정보를 검색합니다.

- **사용 방법**: 메뉴에서 **2**를 선택 후 학번 또는 학과 검색 옵션과 검색어 입력.
- **출력 형식**: 학번, 이름, 학과, 이메일, 전화번호 형식으로 출력.

### 4.3. 학생 정보 내보내기 (`export_students` 함수)
전체 학생 정보를 파일로 내보내거나, 특정 학번/학과 기준으로 필터링하여 파일로 저장합니다.

- **사용 방법**: 메뉴에서 **3**을 선택 후 내보내기 옵션(전체, 특정 학번, 특정 학과)을 선택하고 필요시 검색어 입력.
- **내보내기 파일명**:
  - 전체 내보내기: `전체학생정보.txt`
  - 특정 학번: `학번_[학번]_학생정보.txt`
  - 특정 학과: `학과_[학과명]_학생정보.txt`

### 4.4. 학생 정보 수정 (`edit_student` 함수)
학번을 기준으로 특정 학생의 정보를 수정합니다.

- **사용 방법**: 메뉴에서 **4**를 선택 후 수정할 학번 입력 및 수정할 항목(학번, 이름, 학과, 이메일, 전화번호) 선택, 새 값 입력.
- **수정 가능 항목**: 학번, 이름, 학과, 이메일, 전화번호.

### 4.5. 학생 정보 삭제 (`delete_student` 함수)
학번을 기준으로 특정 학생의 정보를 삭제합니다.

- **사용 방법**: 메뉴에서 **5**를 선택 후 삭제할 학번 입력.
- **삭제 방식**: 삭제할 학번과 일치하지 않는 데이터를 임시 파일에 기록하고, 임시 파일을 원본 파일로 대체.

### 4.6. 프로그램 종료 (`exit`)
메뉴에서 **6**을 선택하여 프로그램을 종료합니다.

## 5. 예외 처리 및 오류 메시지

- **파일 열기 오류**: 파일이 없거나 열리지 않는 경우 "파일 열기 오류" 메시지 출력.
- **잘못된 입력 처리**: 잘못된 메뉴 번호나 값 입력 시 오류 메시지 출력 및 재입력 요청.
- **검색 결과 없음**: 검색어에 맞는 결과가 없을 경우 "검색 결과가 없습니다" 메시지 출력.

## 6. 코드 설명 및 분석

### 6.1. 주요 데이터 구조
- **구조체 Student**: 학생 정보를 저장하는 구조체로, 학번, 이름, 학과, 이메일, 전화번호 필드를 포함.

### 6.2. 정렬 알고리즘
- **Bubble Sort**: 학번을 기준으로 정렬하여 파일에 저장하며, 코드의 간단함과 이해 용이성을 위해 선택.

### 6.3. 파일 입출력
- **파일 저장 방식**: CSV 형식으로 데이터를 파일에 저장, 각 필드 값은 쉼표(,)로 구분.
- **임시 파일 사용**: C 언어의 파일 처리 제약으로 인해 데이터 삭제 시 임시 파일을 사용하여 데이터 조작.



위 보고서를 참고하여 프로그램을 사용할 수 있습니다.
